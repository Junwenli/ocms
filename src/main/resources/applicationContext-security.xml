<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.0.xsd">

	<http auto-config="false" use-expressions="true"  servlet-api-provision="true">
		<intercept-url pattern="/resources/**" filters="none" />
		<intercept-url pattern="/accessDenied.jsp" filters="none"/>
		<intercept-url pattern="/authFailure.jsp" filters="none"/>
		<intercept-url pattern="/logout.jsp" filters="none"/>
		<intercept-url pattern="/login.jsp" filters="none" />
		<intercept-url pattern="/403.jsp" filters="none" />
		<intercept-url pattern="/jcaptcha!checkJcaptcha.action" filters="none" />
		<intercept-url pattern="/jcaptcha" filters="none" />
		<!--  
		<form-login login-page="/login.jsp"
			authentication-failure-url="/login.jsp?error=true"
			default-target-url="/common/main.jsp" />
			http://localhost:8089/core/home/home!toHomepage.action?request_locale=en_US
		-->
		<form-login login-page="/login.jsp"
			authentication-failure-url="/login.jsp?error=true"
			default-target-url="/home/home!toMain.action" always-use-default-target="true" />
		<logout logout-success-url="/login.jsp" />	
		<custom-filter position="CAS_FILTER" ref="casFilter"/>
		<custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="myFilter" />	
	</http>
	
	<beans:bean id="sysRoleService"
		class="com.linkcm.core.service.sys.SysRoleService" />

	<beans:bean id="sysResourceService"
		class="com.linkcm.core.service.sys.SysResourceService" />
		
	<beans:bean id="sysGivePermissionService"
		class="com.linkcm.core.service.sys.SysGivePermissionService" />
		
	<!-- 一个自定义的filter，必须包含authenticationManager,accessDecisionManager,securityMetadataSource三个属性， 
		我们的所有控制将在这三个类中实现，解释详见具体配置 -->
	<beans:bean id="myFilter"
		class=" com.linkcm.core.security.MyFilterSecurityInterceptor">
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="accessDecisionManager" ref="myAccessDecisionManagerBean" />
		<beans:property name="securityMetadataSource" ref="securityMetadataSource" />
	</beans:bean>
	
	<!-- 
	<beans:bean id="casEntryPoint"	class="com.linkcm.media.sso.CasAuthenticationEntryPoint">  
	 -->	<!-- <beans:property name="loginUrl" value="${cas.server}/login"/> -->
	<!--<beans:property name="serverPort"  value="${cas.server.port}"/>
		<beans:property name="clientPort"  value="${cas.client.port}"/>
		<beans:property name="serviceProperties" ref="serviceProperties"/>
	</beans:bean> -->	
	
	<beans:bean id="serviceProperties" class="org.springframework.security.cas.ServiceProperties">
		<beans:property name="service" value="/j_spring_cas_security_check"/>
		<beans:property name="sendRenew" value="false"/>
	</beans:bean>  
	
	<beans:bean id="casFilter"
           class="org.springframework.security.cas.web.CasAuthenticationFilter">  
       <beans:property name="authenticationManager" ref="authenticationManager"/>
       <beans:property name="authenticationSuccessHandler" ref="authenticationSuccessHandler"/>
       <beans:property name="AuthenticationFailureHandler">
       		<beans:bean class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
				<beans:property name="defaultFailureUrl" value="/authFailure.jsp"/>
			</beans:bean>
       </beans:property>
   </beans:bean>
      
   <authentication-manager alias="authenticationManager">  
       <authentication-provider  user-service-ref="userDetailsService">  
       		<password-encoder hash="md5"/>	
       </authentication-provider>
   </authentication-manager>  
  
   <beans:bean id="authenticationSuccessHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler">
   		<beans:property name="alwaysUseDefaultTargetUrl" value="true"></beans:property>
   		<beans:property name="defaultTargetUrl" value="/common/main.jsp"></beans:property>
   </beans:bean>
   
   <beans:bean id="casAuthenticationProvider"  
            class="org.springframework.security.cas.authentication.CasAuthenticationProvider">  
        <beans:property name="authenticationUserDetailsService" ref="casAuthenticationUserDetailsService"/>  
        <beans:property name="serviceProperties" ref="serviceProperties" />  
        <beans:property name="ticketValidator">  
            <beans:bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">  
                <beans:constructor-arg index="0" value="http://${cas.server.ip}:${cas.server.port}/cas" />  
            </beans:bean>  
        </beans:property>  
        <beans:property name="key" value="an_id_for_this_auth_provider_only"/>
    </beans:bean>
    
    <beans:bean id="userDetailsService" class="com.linkcm.core.security.UserDetailsServiceImpl">
    </beans:bean>
      
    <beans:bean id="casAuthenticationUserDetailsService" class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">  
        <beans:property name="userDetailsService" >  
            <beans:ref local="userDetailsService"/>  
        </beans:property>  
    </beans:bean>  
    
    <!-- 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源 -->
	<beans:bean id="myAccessDecisionManagerBean"
		class="com.linkcm.core.security.MyAccessDecisionManager">
	</beans:bean>

	<!-- 资源源数据定义，即定义某一资源可以被哪些角色访问 -->
	<beans:bean id="securityMetadataSource"
		class="com.linkcm.core.security.MyInvocationSecurityMetadataSource">
		<beans:property name="sysRoleService" ref="sysRoleService" />
		<beans:property name="sysResourceService" ref="sysResourceService" />
		<beans:property name="sysGivePermissionService" ref="sysGivePermissionService" />
	</beans:bean>
    
</beans:beans>
